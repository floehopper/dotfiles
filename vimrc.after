colorscheme Tomorrow-Night

" More sensible wrapping for markdown files
au FileType markdown set textwidth=0

" Make it more obvious where a single line is being wrapped
set showbreak=â€¦

" The following is based on https://github.com/tpope/vim-rails#faq
" Setup`make` to run the test in the current file
autocmd FileType cucumber compiler cucumber | setl makeprg=cucumber\ \"%:p\"
autocmd FileType ruby
      \ if expand('%') =~# '_test\.rb$' |
      \   compiler rubyunit | setl makeprg=testrb\ \"%:p\" |
      \ elseif expand('%') =~# '_spec\.rb$' |
      \   compiler rspec | setl makeprg=rspec\ \"%:p\" |
      \ else |
      \   compiler ruby | setl makeprg=ruby\ -wc\ \"%:p\" |
      \ endif
autocmd User Bundler
      \ if &makeprg !~# 'bundle' | setl makeprg^=bundle\ exec\  | endif

" The following are based on
" http://robots.thoughtbot.com/post/48275867281/vim-splits-move-faster-and-more-naturally

" Easier split navigation (ctrl-arrowkey is already used by OSX)
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Open new split panes to right and bottom (more natural than default)
set splitbelow
set splitright

" rspec.vim mappings
map <Leader>r :call RunCurrentSpecFile()<CR>
map <Leader>R :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>

" show information about the current command including size of selection in
" visual mode
set showcmd

" always display status line
set laststatus=2
" Hide the default mode text (e.g. -- INSERT -- below the statusline)
" because it is provided by the powerline statusline anyway
set noshowmode

" ensure powerline statusline is updated as soon as visual mode is exited
if ! has('gui_running')
  set ttimeoutlen=10
  augroup FastEscape
    autocmd!
    au InsertEnter * set timeoutlen=0
    au InsertLeave * set timeoutlen=1000
  augroup END
endif

